{"version":3,"sources":["components/MiBuri.js","App.js","index.js"],"names":["MiBuri","onAnswer","this","props","react_default","a","createElement","className","onChange","name","id","cols","rows","React","Component","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isBuri","handlePictureOfBuri","bind","assertThisInitialized","event","currentTarget","value","includes","setState","divClasses","components_MiBuri","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"gOAiBeA,0LAdD,IACCC,EAAUC,KAAKC,MAAfF,SACP,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,uBACAH,EAAAC,EAAAC,cAAA,YACAE,SAAUP,EACVQ,KAAK,GAAGC,GAAG,GAAGC,KAAK,KAAKC,KAAK,eARxBC,IAAMC,YCsCZC,cAlCX,SAAAA,EAAYZ,GAAM,IAAAa,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAf,KAAAa,IAClBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAf,KAAAe,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAnB,KAAMC,KAEDmB,MAAQ,CACXC,QAAQ,GAEVP,EAAKQ,oBAAsBR,EAAKQ,oBAAoBC,KAAzBR,OAAAS,EAAA,EAAAT,CAAAD,IANTA,mFASAW,GACQA,EAAjBC,cACUC,MAAMC,SAAS,SAC9B5B,KAAK6B,SAAS,CAACR,QAAQ,IAEvBrB,KAAK6B,SAAS,CAACR,QAAQ,qCAGrB,IAGFS,EAAa,OAMnB,OAJEA,GAJiB9B,KAAKoB,MAAfC,OAKL,YACA,GAGFnB,EAAAC,EAAAC,cAAA,OAAKC,UAAayB,GACf5B,EAAAC,EAAAC,cAAC2B,EAAD,CAAQhC,SAAWC,KAAKsB,8BA7BbX,IAAMC,WCCxBoB,IAASC,OAAO/B,EAAAC,EAAAC,cAAC8B,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.1efa439d.chunk.js","sourcesContent":["import React from 'react';\n\nclass MiBuri extends React.Component {\n    render () {\n        const {onAnswer}=this.props\n        return (\n            <div className=\"div\">\n                <h1 className=\"App--question\"> What's your name? </h1>\n                <textarea \n                onChange={onAnswer}\n                name=\"\" id=\"\" cols=\"30\" rows=\"10\"/>\n            </div>\n\n        );\n    }\n}\n\nexport default MiBuri;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.scss';\nimport MiBuri from './components/MiBuri';\n\nclass App extends React.Component {\n    constructor(props){\n    super(props);\n\n    this.state = {\n      isBuri: false\n    }\n    this.handlePictureOfBuri = this.handlePictureOfBuri.bind(this);\n  }\n\n  handlePictureOfBuri(event) {\n      const {currentTarget} = event;\n      if(currentTarget.value.includes('burak')){\n        this.setState({isBuri: true});\n      } else {\n        this.setState({isBuri: false});\n      }\n  }\n  render(){\n    const {isBuri} = this.state;\n\n    let divClasses = \"div \";\n\n    divClasses += isBuri\n    ? \"div--buri\"\n    : \"\"\n  \n  return (\n    <div className = {divClasses}>\n       <MiBuri onAnswer= {this.handlePictureOfBuri}/>\n    </div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}